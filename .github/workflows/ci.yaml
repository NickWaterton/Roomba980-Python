name: CI

on:
  push:
    branches:
      - master

  pull_request:

  workflow_dispatch:

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2

      - name: Create venv cache
        id: cache-venv
        uses: actions/cache@v2.1.4
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Create venv and install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          poetry install

      - name: Black
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual black --all-files

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2

      - name: Create venv cache
        id: cache-venv
        uses: actions/cache@v2.1.4
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Create venv and install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          poetry install

      - name: isort
        run: |
          pre-commit run --hook-stage manual isort --all-files

  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2

      - name: Create venv cache
        id: cache-venv
        uses: actions/cache@v2.1.4
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Create venv and install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          poetry install

      - name: flake8
        run: |
          pre-commit run --hook-stage manual flake8 --all-files

  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2

      - name: Create venv cache
        id: cache-venv
        uses: actions/cache@v2.1.4
        with:
          path: venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-venv-

      - name: Create venv and install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          poetry install

      - name: Run Pytest
        run: |
          . venv/bin/activate
          pytest
